{"name":"tEffects","body":"* The project site: https://github.com/dsheiko/Transition-Effects-JS-Library\r\n* The demo site: http://demo.dsheiko.com/teffects/\r\n\r\nThe plugin allows you to convert simple markup into a slide-show with the set of fancy configurable transition effects. The plugin tries to render the effects with CSS3 transitions. However if the browser does not support CSS3 the efects willbe achieved by JS.\r\n\r\nEvery available effect is encopsulated into a single module. So you do not have to violate YAGNI principle. Just remove redundant effect modules and leave the only code responding to your requirements.\r\n\r\n\r\n### How to use\r\n\r\n#### Step 1\r\n\r\nIncluding plugin scripts after jQuery (requires jQuery 1.4+):\r\n\r\n    <link href=\"./assets/t-effects.css\" rel=\"stylesheet\" media=\"all\" />\r\n    <script src=\"./js/jquery.a-queue.js\" type=\"text/javascript\"></script>\r\n    <script src=\"./js/jquery.t-effects.js\" type=\"text/javascript\"></script>\r\n\r\n#### Step 2\r\n\r\nTo have slideshow running it is enough just to provide a placeholder within DOM with images to slide inside:\r\n\r\n    <div id=\"slideshow\">\r\n        <img src=\"./slides/sample1.jpg\" />\r\n        <img src=\"./slides/sample2.jpg\" />\r\n        <img src=\"./slides/sample3.jpg\" />\r\n    </div>\r\n\r\nThough if you want to keep images elsewhere, they can be passed into the plugin through images option.\r\n#### Step 3\r\n\r\nNow here how the plugin can be initialized and enabled.\r\n\r\n    <script type=\"text/javascript\">\r\n        $(document).ready(function(){\r\n            $('#slideshow').tEffects({\r\n               effect: 'FadeInOut'\r\n            }).enable();\r\n        });\r\n    </script>\r\n\r\n#### Step 4 (optional)\r\n\r\nThe slide-show is running and can be navigated by arrows-keys, but you want to subscribe you own navigation controls. Well, you can do it like that:\r\n\r\n    $('#slideshow').tEffects({\r\n        effect: 'FadeInOut',\r\n        triggerNext: {\r\n               node: $('button.next'),\r\n               event: 'click'\r\n        },\r\n        triggerPrev: {\r\n               node: $('button.prev'),\r\n               event: 'click'\r\n        }\r\n    }).enable();\r\n\r\n#### Available Options\r\n\r\neffect\r\n    transition effect: Default, FadeInOut, Jalousie, Ladder, Scroll, Deck, Jaw, DiagonalCells, RandomCells \r\n\r\ndirection\r\n    transition direction: vertical or horizontal\r\n\r\ntransitionDuration\r\n    duration of transition in seconds\r\n\r\ntransitionDelay\r\n    delay between iterations in milliseconds\r\n\r\nrows\r\n    number of images slices for vertical direction\r\n\r\ncols\r\n    number of images slices for horizontal direction\r\n\r\ndimension\r\n    number of columns and rows on a grid\r\n\r\ninitalIndex\r\n    forces the image of given index be current\r\n\r\ntriggerNext\r\n    the trigger for Next-image event: { node: node, event: 'click' }\r\n\r\ntriggerPrev\r\n    the trigger for Previous-image event: { node: node, event: 'click' }\r\n\r\ncontrols\r\n    images direct controls: { template: 'button html', appendTo: toolbar node }\r\n\r\nimages\r\n    array with images when they passed manually. E.g. images: $('div.storage > img')\r\n\r\n#### Events\r\n\r\nstart-transition.t-effect\r\n    fired staight before transition applied. Handler gets current image index as an argument.\r\n\r\nend-transition.t-effect\r\n    fired staight after transition applied. Handler gets current image index as an argument.\r\n\r\n#### Methods\r\n\r\nenable\r\n    enables arrow-keys and given controls. \r\n\r\ndisable\r\n    disables arrow-keys and given controls. E.g. you have the slide show on an overlay. When overlay is hidden, you use disable method to unsubscribe controls. When the overlay is visible again, use disable method.\r\n\r\nreset\r\n    you can reset options on a running tEffetcs instance ","tagline":"Provides such effect as fade, blur, jalousie, scroll, ladder, zoom and others. Shims CSS3 effects on legacy browsers  ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}